# -*- coding: utf-8 -*-
"""12_ScriptGrafikManajemenKeuanganPersonal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vlhP9AgUYL0VOjQw7wu1aq5wCjo6W_vW
"""

import pandas as pd
import matplotlib.pyplot as plt
import os
import numpy as np
import seaborn as sns
import dateutil
from datetime import datetime as dt
from pytz import utc
from ipywidgets import interact

financial = pd.read_csv('financial.csv', engine = 'python', encoding = 'ISO-8859-1')
financial.head()

financial['datatime'] = pd.to_datetime(financial['bulan'], errors='coerce')
financial['month'] = financial['datatime'].dt.strftime('%B')
month_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July',
               'August', 'September', 'October', 'November', 'December']
financial['month_order'] = financial['month'].apply(
    lambda x: month_order.index(x) + 1 if x in month_order else None
)
financial = financial.sort_values(by='month_order').drop(columns=['month_order'])
sorted_months = financial['bulan'].unique().tolist()
financial['year'] = financial['datatime'].dt.year.astype('Int64')

financial.head()

all_user_ids = sorted(financial['user_id'].unique())
year = sorted(financial['year'].unique())

def plot_expense(Bulan, Tahun):
    # Filter data berdasarkan bulan dan kategori 'expense'
    filtered_data = financial.query("month == @Bulan and year == @Tahun and kategori == 'expense'")

    # Menambahkan baris untuk user_id yang tidak memiliki data pada bulan tertentu
    for user_id in all_user_ids:
        if user_id not in filtered_data['user_id'].values:
            filtered_data = pd.concat(
                [filtered_data, pd.DataFrame({'user_id': [user_id], 'total': [0], 'month': [Bulan], 'year': [Tahun], 'kategori': ['expense']})]
            )

    # Membuat bar chart
    plt.figure(figsize=(10, 6))
    sns.barplot(
        x='user_id',
        y='total',
        data=filtered_data,
        palette='Paired',
        hue='user_id'
    )

    # Styling
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.tight_layout()
    plt.xlabel('User ID', fontsize=12)
    plt.ylabel('Total Pengeluaran (Expense)', fontsize=12)
    plt.title(f'Total Pengeluaran pada {Bulan} {Tahun}', fontsize=14)
    plt.legend(title='User ID', fontsize=10)
    plt.show()

# Dropdown menu untuk memilih bulan
interact(plot_expense, Bulan=month_order, Tahun=year)

def plot_income(Bulan, Tahun):
    # Filter data berdasarkan bulan dan kategori 'income'
    filtered_data = financial.query("month == @Bulan and year == @Tahun and kategori == 'income'")

    # Menambahkan baris untuk user_id yang tidak memiliki data pada bulan tertentu
    for user_id in all_user_ids:
        if user_id not in filtered_data['user_id'].values:
            filtered_data = pd.concat(
                [filtered_data, pd.DataFrame({'user_id': [user_id], 'total': [0], 'month': [Bulan], 'year': [Tahun], 'kategori': ['income']})]
            )

    # Membuat bar chart
    plt.figure(figsize=(10, 6))
    sns.barplot(
        x='user_id',
        y='total',
        data=filtered_data,
        palette='Paired',
        hue='user_id'
    )

    # Styling
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.tight_layout()
    plt.xlabel('User ID', fontsize=12)
    plt.ylabel('Total Pengeluaran (Income)', fontsize=12)
    plt.title(f'Total Pengeluaran pada {Bulan} {Tahun}', fontsize=14)
    plt.legend(title='User ID', fontsize=10)
    plt.show()

# Dropdown menu untuk memilih bulan
interact(plot_income, Bulan=month_order, Tahun=year)